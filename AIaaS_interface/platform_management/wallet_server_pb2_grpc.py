# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from platform_management import wallet_server_pb2 as platform__management_dot_wallet__server__pb2


class WalletStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateNewWallet = channel.unary_unary(
                '/wallet_server.Wallet/CreateNewWallet',
                request_serializer=platform__management_dot_wallet__server__pb2.CreateNewWalletRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.CreateNewWalletResponse.FromString,
                )
        self.HasUserWallet = channel.unary_unary(
                '/wallet_server.Wallet/HasUserWallet',
                request_serializer=platform__management_dot_wallet__server__pb2.HasUserWalletRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.HasUserWalletResponse.FromString,
                )
        self.OnlinePayment = channel.unary_unary(
                '/wallet_server.Wallet/OnlinePayment',
                request_serializer=platform__management_dot_wallet__server__pb2.OnlinePaymentRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.OnlinePaymentResponse.FromString,
                )
        self.VerifyOnlinePayment = channel.unary_unary(
                '/wallet_server.Wallet/VerifyOnlinePayment',
                request_serializer=platform__management_dot_wallet__server__pb2.VerifyOnlinePaymentRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.VerifyOnlinePaymentResponse.FromString,
                )
        self.GetWalletBalance = channel.unary_unary(
                '/wallet_server.Wallet/GetWalletBalance',
                request_serializer=platform__management_dot_wallet__server__pb2.GetWalletBalanceRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.GetWalletBalanceResponse.FromString,
                )
        self.GetTransactionsHistory = channel.unary_unary(
                '/wallet_server.Wallet/GetTransactionsHistory',
                request_serializer=platform__management_dot_wallet__server__pb2.GetTransactionsHistoryRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.GetTransactionsHistoryResponse.FromString,
                )
        self.SetAIModelCostPerReq = channel.unary_unary(
                '/wallet_server.Wallet/SetAIModelCostPerReq',
                request_serializer=platform__management_dot_wallet__server__pb2.SetAIModelCostPerReqRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.SetAIModelCostPerReqResponse.FromString,
                )
        self.GetAIModelsCostPerReq = channel.unary_unary(
                '/wallet_server.Wallet/GetAIModelsCostPerReq',
                request_serializer=platform__management_dot_wallet__server__pb2.GetAIModelsCostPerReqRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.GetAIModelsCostPerReqResponse.FromString,
                )
        self.BuyAIModelReqPackage = channel.unary_unary(
                '/wallet_server.Wallet/BuyAIModelReqPackage',
                request_serializer=platform__management_dot_wallet__server__pb2.BuyAIModelReqPackageRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.BuyAIModelReqPackageResponse.FromString,
                )
        self.GetAIModelRequestCount = channel.unary_unary(
                '/wallet_server.Wallet/GetAIModelRequestCount',
                request_serializer=platform__management_dot_wallet__server__pb2.GetAIModelRequestCountRequest.SerializeToString,
                response_deserializer=platform__management_dot_wallet__server__pb2.GetAIModelRequestCountResponse.FromString,
                )


class WalletServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateNewWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasUserWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnlinePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyOnlinePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionsHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAIModelCostPerReq(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAIModelsCostPerReq(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyAIModelReqPackage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAIModelRequestCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateNewWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNewWallet,
                    request_deserializer=platform__management_dot_wallet__server__pb2.CreateNewWalletRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.CreateNewWalletResponse.SerializeToString,
            ),
            'HasUserWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.HasUserWallet,
                    request_deserializer=platform__management_dot_wallet__server__pb2.HasUserWalletRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.HasUserWalletResponse.SerializeToString,
            ),
            'OnlinePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.OnlinePayment,
                    request_deserializer=platform__management_dot_wallet__server__pb2.OnlinePaymentRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.OnlinePaymentResponse.SerializeToString,
            ),
            'VerifyOnlinePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyOnlinePayment,
                    request_deserializer=platform__management_dot_wallet__server__pb2.VerifyOnlinePaymentRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.VerifyOnlinePaymentResponse.SerializeToString,
            ),
            'GetWalletBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletBalance,
                    request_deserializer=platform__management_dot_wallet__server__pb2.GetWalletBalanceRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.GetWalletBalanceResponse.SerializeToString,
            ),
            'GetTransactionsHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsHistory,
                    request_deserializer=platform__management_dot_wallet__server__pb2.GetTransactionsHistoryRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.GetTransactionsHistoryResponse.SerializeToString,
            ),
            'SetAIModelCostPerReq': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAIModelCostPerReq,
                    request_deserializer=platform__management_dot_wallet__server__pb2.SetAIModelCostPerReqRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.SetAIModelCostPerReqResponse.SerializeToString,
            ),
            'GetAIModelsCostPerReq': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAIModelsCostPerReq,
                    request_deserializer=platform__management_dot_wallet__server__pb2.GetAIModelsCostPerReqRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.GetAIModelsCostPerReqResponse.SerializeToString,
            ),
            'BuyAIModelReqPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyAIModelReqPackage,
                    request_deserializer=platform__management_dot_wallet__server__pb2.BuyAIModelReqPackageRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.BuyAIModelReqPackageResponse.SerializeToString,
            ),
            'GetAIModelRequestCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAIModelRequestCount,
                    request_deserializer=platform__management_dot_wallet__server__pb2.GetAIModelRequestCountRequest.FromString,
                    response_serializer=platform__management_dot_wallet__server__pb2.GetAIModelRequestCountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wallet_server.Wallet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Wallet(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateNewWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/CreateNewWallet',
            platform__management_dot_wallet__server__pb2.CreateNewWalletRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.CreateNewWalletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasUserWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/HasUserWallet',
            platform__management_dot_wallet__server__pb2.HasUserWalletRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.HasUserWalletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OnlinePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/OnlinePayment',
            platform__management_dot_wallet__server__pb2.OnlinePaymentRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.OnlinePaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyOnlinePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/VerifyOnlinePayment',
            platform__management_dot_wallet__server__pb2.VerifyOnlinePaymentRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.VerifyOnlinePaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWalletBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/GetWalletBalance',
            platform__management_dot_wallet__server__pb2.GetWalletBalanceRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.GetWalletBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionsHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/GetTransactionsHistory',
            platform__management_dot_wallet__server__pb2.GetTransactionsHistoryRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.GetTransactionsHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAIModelCostPerReq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/SetAIModelCostPerReq',
            platform__management_dot_wallet__server__pb2.SetAIModelCostPerReqRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.SetAIModelCostPerReqResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAIModelsCostPerReq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/GetAIModelsCostPerReq',
            platform__management_dot_wallet__server__pb2.GetAIModelsCostPerReqRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.GetAIModelsCostPerReqResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyAIModelReqPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/BuyAIModelReqPackage',
            platform__management_dot_wallet__server__pb2.BuyAIModelReqPackageRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.BuyAIModelReqPackageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAIModelRequestCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wallet_server.Wallet/GetAIModelRequestCount',
            platform__management_dot_wallet__server__pb2.GetAIModelRequestCountRequest.SerializeToString,
            platform__management_dot_wallet__server__pb2.GetAIModelRequestCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
